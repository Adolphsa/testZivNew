import java.text.DateFormat
import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

def currentTime = getCurrentTime();

def getCurrentTime() {
    DateFormat df = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss")
    return df.format(Calendar.getInstance(Locale.CHINA).getTime())
}

//String getDate() {
//    DateFormat df = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss")
//    return df.format(Calendar.getInstance(Locale.CHINA).getTime()).toString()
//};

android {
    signingConfigs {
        release {
            keyAlias 'yplay'
            keyPassword '123456'
            storeFile file('C:/key/yplay.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion 25
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.yeejay.yplay"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 0
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release

        ndk {
            abiFilters "armeabi"
        }

        multiDexEnabled true

    }
    buildTypes {
        release {
            buildConfigField("String", "BUILD_TIMESTAMP", "\"${currentTime}\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField("String", "BUILD_TIMESTAMP", "\"${currentTime}\"")
            signingConfig signingConfigs.release
        }
    }

    productFlavors {}

    greendao {
        schemaVersion 1
        targetGenDir 'src/main/java'
        daoPackage 'com.yeejay.yplay.greendao'
    }

    useLibrary 'org.apache.http.legacy'

    //如果version.properties文件可读则执行操作
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        //载入version.properties
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        //从version.properties根据关键字"VERSION_CODE"取Integer
        def verCode = versionProps['VERSION_CODE'].toInteger()
        //判断build模式，如果是发布模式（':app:assembleRelease'）则自增版本号，并且写回version.properties文件中
//          def runTasks = gradle.startParameter.taskNames
//        if (':app:assembleRelease' in runTasks) {
            versionProps['VERSION_CODE'] = (++verCode).toString()
            versionProps.store(versionPropsFile.newWriter(), null)
//        }
        //使用自增后的版本号为为生成的APK命名
//        def verName = "0."+versionProps['VERSION_CODE'].toString()

        defaultConfig.versionCode = verCode;
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                def newApkName
                newApkName = defaultConfig.applicationId + "_" + defaultConfig.versionName + "." + defaultConfig.versionCode  + "_beta" + ".apk"
                outputFileName = newApkName;
            }
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //ButterKnife
    //导航栏
    //运行时权限
    //SwipeRecyclerView
    compile('com.github.hotchemi:permissionsdispatcher:2.4.0') { exclude module: 'support-v13' }
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.jakewharton:butterknife:8.8.1'
    compile 'com.yanzhenjie:permission:1.1.2'
    compile 'com.yanzhenjie:recyclerview-swipe:1.1.3'
    compile 'com.google.code.gson:gson:2.1.0'
    compile 'io.reactivex.rxjava2:rxjava:2.1.6'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'org.greenrobot:greendao:3.2.2'
    compile 'org.greenrobot:greendao-generator:3.0.0'
    compile 'com.library.tangxiaolv:effectiveshapeview:1.0.1'
    compile 'com.jwenfeng.pulltorefresh:library:1.2.7'
    compile 'com.github.iwgang:countdownview:2.1.6'
    compile 'com.pnikosis:materialish-progress:1.7'
    compile 'com.huawei.android.hms:push:2.5.2.300'
    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.4.0'
    compile files('libs/imsdk.jar')
    implementation files('libs/mobilepb.jar')
    implementation files('libs/imsdk_msg_ext.jar')
    implementation files('libs/MiPush_SDK_Client_3_5_1.jar')
    implementation files('libs/imsdk_group_ext.jar')
    implementation files('libs/BaiduLBS_Android.jar')
    implementation project(':imageselector')
}
